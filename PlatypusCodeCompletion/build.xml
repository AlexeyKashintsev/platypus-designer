<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
<!-- for some information on what you could do (e.g. targets to override). -->
<!-- If you delete this file and reopen the project it will be recreated. -->
<project name="com.eas.designer.codecompletion" default="netbeans" basedir=".">
    <description>Builds, tests, and runs the project com.eas.designer.codecompletion.</description>
    <import file="nbproject/build-impl.xml"/>
    <target name="build-init" depends="basic-init,nbm-license-init">
        <condition property="public.package.jar.dir" value="${suite.build.dir}/public-package-jars">
            <isset property="suite.build.dir"/>
        </condition>
        <property name="public.package.jar.dir" location="${build.dir}/public-package-jars"/>
        <mkdir dir="${public.package.jar.dir}"/>
        <!-- Similar to projectized.xml but does not try to set NBM homepage/distribution, nor is javahelp.excludes predefined. -->
        <!--module.classpath property has been removed from parseprojectxml tag. 
        Parseprojectxml will not check friends list of modules-->
        <parseprojectxml
            project="."
            publicpackagesproperty="public.packages"
            friendsproperty="friends"
            javadocpackagesproperty="module.javadoc.packages"
            moduledependenciesproperty="module.dependencies"
            publicpackagejardir="${public.package.jar.dir}"
            moduleprocessorclasspathproperty="module.processor.classpath"
            modulerunclasspathproperty="module.run.classpath"
            classpathextensionsproperty="class.path.extensions"
        >
            <testtype name="unit"
                      runtimecp="test.unit.runtime.cp"
                      compilecp="test.unit.compile.cp"
                      compiledep="test.unit.testdep"/>
            <testtype name="qa-functional"
                      runtimecp="test.qa-functional.runtime.cp"
                      compilecp="test.qa-functional.compile.cp"
                      compiledep="test.qa-functional.testdep"/>
        </parseprojectxml>
        <!--module.classpath property must be set anyway.
        Its value is substituted with module.run.classpath property value--> 
        <property name="module.classpath" value="${module.run.classpath}"/>     
         
        <condition property="is.regular">
            <not>
                <or>
                    <isset property="is.autoload"/>
                    <isset property="is.eager"/>
                    <equals arg1="${module.jar.dir}" arg2="core"/>
                    <equals arg1="${module.jar.dir}" arg2="lib"/>
                </or>
            </not>
        </condition>
        <property name="build.compiler.debug" value="true"/>
        <property name="build.compiler.debuglevel" value="source,lines,vars"/>
        <property name="build.compiler.deprecation" value="true"/>
        <property name="build.sysclasspath" value="ignore"/>
        <property name="build.compiler.optimize" value="off"/>
        <property name="build.package.compress" value="false"/>
        <property name="build.package.index" value="false"/>
        <property name="manifest.mf" location="manifest.mf"/>
        <property name="src.dir" location="src"/>
        <property name="nbm" value="${code.name.base.dashes}.nbm"/>
        <property name="nbm.module.author" value=""/>
        <property name="nbm.release.date" value=""/>
        <property name="nbm.needs.restart" value="false"/>
        <property name="nbm.is.global" value=""/>
        <property name="nbm.is.preferredupdate" value=""/>
        <!--Override if you want to use these:--> 
        <property name="nbm.distribution" value=""/>
        <property name="nbm.homepage" value=""/>
        <property name="build.javahelp.dir" location="${build.dir}/javahelp"/>
        <property name="javahelp.base" value="${code.name.base.slashes}/docs"/>
        <property name="javahelp.search" value="JavaHelpSearch"/>
        <pathconvert property="retouche.javac.api">
            <pathfileset>
                <path path="${cluster.path.final}"/>
                <filename name="modules/ext/*javac*api*.jar"/>
            </pathfileset>
        </pathconvert>
        <pathconvert property="retouche.javac.impl">
            <pathfileset>
                <path path="${cluster.path.final}"/>
                <filename name="modules/ext/*javac*impl*.jar"/>
            </pathfileset>
            <fileset dir="${nbjdk.home}/../Classes" erroronmissingdir="false">
                <include name="*.jar"/>
            </fileset>
        </pathconvert>
        <!--         When requires.nb.javac property is true, prepend javac-api on bootclasspath to allow override the default annotation
        processing API located in rt.jar. On Mac, prepend also javac-impl, so that tests are built against correct version of javac. -->
        <condition property="bootclasspath.prepend" value="${retouche.javac.api}:${retouche.javac.impl}">
            <and>
                <os family="mac"/>
                <istrue value="${requires.nb.javac}"/>
            </and>
        </condition>
        <condition property="bootclasspath.prepend" value="${retouche.javac.api}">
            <istrue value="${requires.nb.javac}"/>
        </condition>
    </target>
    
</project>

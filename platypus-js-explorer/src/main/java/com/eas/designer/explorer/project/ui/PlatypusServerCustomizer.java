package com.eas.designer.explorer.project.ui;

import com.eas.designer.explorer.project.PlatypusProjectImpl;
import com.eas.designer.explorer.project.PlatypusProjectSettingsImpl;
import java.awt.EventQueue;
import java.util.logging.Level;
import org.openide.filesystems.FileObject;

/**
 *
 * @author mg
 */
public class PlatypusServerCustomizer extends javax.swing.JPanel {

    protected final PlatypusProjectImpl project;
    protected final FileObject appRoot;
    protected final PlatypusProjectSettingsImpl projectSettings;
    private boolean isInit;

    /**
     * Creates new form ProjectRunningCustomizer
     * @param aProject
     */
    public PlatypusServerCustomizer(PlatypusProjectImpl aProject) {
        project = aProject;
        appRoot = aProject.getSrcRoot();
        projectSettings = aProject.getSettings();
        initComponents();
        EventQueue.invokeLater(() -> {
            isInit = true;
            try {
                spServerPort.setValue(projectSettings.getServerPort());
                if (projectSettings.getRunServerOptions() != null) {
                    txtServerOptions.setText(projectSettings.getRunServerOptions());
                }
                if (projectSettings.getRunServerVmOptions() != null) {
                    txtServerVmOptions.setText(projectSettings.getRunServerVmOptions());
                }
                cbNotStartServer.setSelected(projectSettings.isNotStartServer());
                cbServerLogLevel.setSelectedItem(projectSettings.getServerLogLevel());

                spServerDebugPort.setValue(projectSettings.getDebugServerPort());
            } finally {
                isInit = false;
            }
        });
    }

    private Level[] getLogLevels() {
        return new Level[]{Level.SEVERE, Level.WARNING, Level.INFO, Level.CONFIG, Level.FINE, Level.FINER, Level.FINEST};
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblServerPort = new javax.swing.JLabel();
        spServerPort = new javax.swing.JSpinner();
        lblServerOptions = new javax.swing.JLabel();
        txtServerOptions = new javax.swing.JTextField();
        lblServerVmOptions = new javax.swing.JLabel();
        txtServerVmOptions = new javax.swing.JTextField();
        lblServerLogLevel = new javax.swing.JLabel();
        cbServerLogLevel = new javax.swing.JComboBox();
        lblServerDebugPort = new javax.swing.JLabel();
        spServerDebugPort = new javax.swing.JSpinner();
        cbNotStartServer = new javax.swing.JCheckBox();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        lblServerPort.setText(org.openide.util.NbBundle.getMessage(PlatypusServerCustomizer.class, "PlatypusServerCustomizer.lblServerPort.text")); // NOI18N

        spServerPort.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spServerPortStateChanged(evt);
            }
        });
        spServerPort.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                spServerPortFocusLost(evt);
            }
        });

        lblServerOptions.setText(org.openide.util.NbBundle.getMessage(PlatypusServerCustomizer.class, "PlatypusServerCustomizer.lblServerOptions.text")); // NOI18N

        txtServerOptions.setToolTipText(""); // NOI18N
        txtServerOptions.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtServerOptionsFocusLost(evt);
            }
        });
        txtServerOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtServerOptionsActionPerformed(evt);
            }
        });

        lblServerVmOptions.setText(org.openide.util.NbBundle.getMessage(PlatypusServerCustomizer.class, "PlatypusServerCustomizer.lblServerVmOptions.text")); // NOI18N

        txtServerVmOptions.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtServerVmOptionsFocusLost(evt);
            }
        });
        txtServerVmOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtServerVmOptionsActionPerformed(evt);
            }
        });

        lblServerLogLevel.setText(org.openide.util.NbBundle.getMessage(PlatypusServerCustomizer.class, "PlatypusServerCustomizer.lblServerLogLevel.text")); // NOI18N

        cbServerLogLevel.setModel(new javax.swing.DefaultComboBoxModel(getLogLevels()));
        cbServerLogLevel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbServerLogLevelItemStateChanged(evt);
            }
        });
        cbServerLogLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbServerLogLevelActionPerformed(evt);
            }
        });

        lblServerDebugPort.setText(org.openide.util.NbBundle.getMessage(PlatypusServerCustomizer.class, "PlatypusServerCustomizer.lblServerDebugPort.text")); // NOI18N

        spServerDebugPort.setMinimumSize(new java.awt.Dimension(36, 26));
        spServerDebugPort.setPreferredSize(new java.awt.Dimension(36, 26));
        spServerDebugPort.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spServerDebugPortStateChanged(evt);
            }
        });
        spServerDebugPort.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                spServerDebugPortFocusLost(evt);
            }
        });

        cbNotStartServer.setText(org.openide.util.NbBundle.getMessage(PlatypusServerCustomizer.class, "PlatypusServerCustomizer.cbNotStartServer.text")); // NOI18N
        cbNotStartServer.setActionCommand("");
        cbNotStartServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNotStartServerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbNotStartServer)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblServerPort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblServerVmOptions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblServerOptions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblServerLogLevel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblServerDebugPort, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtServerOptions)
                            .addComponent(txtServerVmOptions)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbServerLogLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spServerDebugPort, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 350, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblServerPort)
                    .addComponent(spServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblServerOptions)
                    .addComponent(txtServerOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblServerVmOptions)
                    .addComponent(txtServerVmOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblServerLogLevel)
                    .addComponent(cbServerLogLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblServerDebugPort)
                    .addComponent(spServerDebugPort, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbNotStartServer)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtServerOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtServerOptionsActionPerformed
        projectSettings.setServerOptions(txtServerOptions.getText());
    }//GEN-LAST:event_txtServerOptionsActionPerformed

    private void txtServerOptionsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtServerOptionsFocusLost
        projectSettings.setServerOptions(txtServerOptions.getText());
    }//GEN-LAST:event_txtServerOptionsFocusLost

    private void cbNotStartServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNotStartServerActionPerformed
        projectSettings.setNotStartServer(cbNotStartServer.isSelected());
    }//GEN-LAST:event_cbNotStartServerActionPerformed

    private void spServerPortFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_spServerPortFocusLost
        projectSettings.setServerPort((Integer) spServerPort.getValue());
    }//GEN-LAST:event_spServerPortFocusLost

    private void spServerPortStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spServerPortStateChanged
        if (!isInit) {
            projectSettings.setServerPort((Integer) spServerPort.getValue());
        }
    }//GEN-LAST:event_spServerPortStateChanged

    private void txtServerVmOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtServerVmOptionsActionPerformed
        projectSettings.setServerVmOptions(txtServerVmOptions.getText());
    }//GEN-LAST:event_txtServerVmOptionsActionPerformed

    private void txtServerVmOptionsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtServerVmOptionsFocusLost
        projectSettings.setServerVmOptions(txtServerVmOptions.getText());
    }//GEN-LAST:event_txtServerVmOptionsFocusLost

    private void spServerDebugPortFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_spServerDebugPortFocusLost
        projectSettings.setDebugServerPort((int) spServerDebugPort.getValue());
    }//GEN-LAST:event_spServerDebugPortFocusLost

    private void spServerDebugPortStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spServerDebugPortStateChanged
        projectSettings.setDebugServerPort((int) spServerDebugPort.getValue());
    }//GEN-LAST:event_spServerDebugPortStateChanged

    private void cbServerLogLevelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbServerLogLevelItemStateChanged
        projectSettings.setServerLogLevel((Level) cbServerLogLevel.getSelectedItem());
    }//GEN-LAST:event_cbServerLogLevelItemStateChanged

    private void cbServerLogLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbServerLogLevelActionPerformed
        projectSettings.setServerLogLevel((Level) cbServerLogLevel.getSelectedItem());
    }//GEN-LAST:event_cbServerLogLevelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbNotStartServer;
    private javax.swing.JComboBox cbServerLogLevel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblServerDebugPort;
    private javax.swing.JLabel lblServerLogLevel;
    private javax.swing.JLabel lblServerOptions;
    private javax.swing.JLabel lblServerPort;
    private javax.swing.JLabel lblServerVmOptions;
    private javax.swing.JSpinner spServerDebugPort;
    private javax.swing.JSpinner spServerPort;
    private javax.swing.JTextField txtServerOptions;
    private javax.swing.JTextField txtServerVmOptions;
    // End of variables declaration//GEN-END:variables
}

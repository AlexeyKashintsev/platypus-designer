package com.eas.designer.explorer.project.ui;

import com.eas.designer.application.project.PlatypusProject;
import com.eas.designer.application.project.PlatypusProjectSettings;
import java.awt.EventQueue;
import java.util.logging.Level;
import javax.swing.JPanel;
import org.openide.filesystems.FileObject;

/**
 *
 * @author mg
 */
public class PlatypusServerCustomizer extends JPanel {

    protected final PlatypusProject project;
    protected final FileObject appRoot;
    protected final PlatypusProjectSettings projectSettings;
    private boolean isInit;

    /**
     * Creates new form ProjectRunningCustomizer
     *
     * @param aProject
     */
    public PlatypusServerCustomizer(PlatypusProject aProject) {
        project = aProject;
        appRoot = aProject.getSrcRoot();
        projectSettings = aProject.getSettings();
        initComponents();
        EventQueue.invokeLater(() -> {
            isInit = true;
            try {
                spServerPort.setValue(projectSettings.getPlatypusServerPort());
                cbRunPlatypusServer.setSelected(projectSettings.getStartLocalPlatypusServer());
                cbServerLogLevel.setSelectedItem(projectSettings.getPlatypusServerLogLevel());
                spServerDebugPort.setValue(projectSettings.getPlatypusServerDebugPort());
                if (projectSettings.getPlatypusServerRunCommand() != null) {
                    txtPlatypusServerRunCommand.setText(projectSettings.getPlatypusServerRunCommand());
                }
            } finally {
                isInit = false;
            }
        });
    }

    private Level[] getLogLevels() {
        return new Level[]{Level.SEVERE, Level.WARNING, Level.INFO, Level.CONFIG, Level.FINE, Level.FINER, Level.FINEST};
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblServerPort = new javax.swing.JLabel();
        spServerPort = new javax.swing.JSpinner();
        lblServerLogLevel = new javax.swing.JLabel();
        cbServerLogLevel = new javax.swing.JComboBox();
        lblServerDebugPort = new javax.swing.JLabel();
        spServerDebugPort = new javax.swing.JSpinner();
        lblPlatypusServerRunCommand = new javax.swing.JLabel();
        txtPlatypusServerRunCommand = new javax.swing.JTextField();
        cbRunPlatypusServer = new javax.swing.JCheckBox();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        lblServerPort.setText(org.openide.util.NbBundle.getMessage(PlatypusServerCustomizer.class, "PlatypusServerCustomizer.lblServerPort.text")); // NOI18N

        spServerPort.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spServerPortStateChanged(evt);
            }
        });
        spServerPort.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                spServerPortFocusLost(evt);
            }
        });

        lblServerLogLevel.setText(org.openide.util.NbBundle.getMessage(PlatypusServerCustomizer.class, "PlatypusServerCustomizer.lblServerLogLevel.text")); // NOI18N

        cbServerLogLevel.setModel(new javax.swing.DefaultComboBoxModel(getLogLevels()));
        cbServerLogLevel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbServerLogLevelItemStateChanged(evt);
            }
        });
        cbServerLogLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbServerLogLevelActionPerformed(evt);
            }
        });

        lblServerDebugPort.setText(org.openide.util.NbBundle.getMessage(PlatypusServerCustomizer.class, "PlatypusServerCustomizer.lblServerDebugPort.text")); // NOI18N

        spServerDebugPort.setMinimumSize(new java.awt.Dimension(36, 26));
        spServerDebugPort.setPreferredSize(new java.awt.Dimension(36, 26));
        spServerDebugPort.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spServerDebugPortStateChanged(evt);
            }
        });
        spServerDebugPort.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                spServerDebugPortFocusLost(evt);
            }
        });

        lblPlatypusServerRunCommand.setText(org.openide.util.NbBundle.getMessage(PlatypusServerCustomizer.class, "PlatypusServerCustomizer.lblPlatypusServerRunCommand.text")); // NOI18N

        txtPlatypusServerRunCommand.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPlatypusServerRunCommandFocusLost(evt);
            }
        });
        txtPlatypusServerRunCommand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlatypusServerRunCommandActionPerformed(evt);
            }
        });

        cbRunPlatypusServer.setText(org.openide.util.NbBundle.getMessage(PlatypusServerCustomizer.class, "PlatypusServerCustomizer.cbRunPlatypusServer.text")); // NOI18N
        cbRunPlatypusServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRunPlatypusServerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbRunPlatypusServer)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblServerPort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblServerLogLevel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblServerDebugPort, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbServerLogLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spServerDebugPort, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 350, Short.MAX_VALUE))
                    .addComponent(lblPlatypusServerRunCommand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPlatypusServerRunCommand))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbRunPlatypusServer)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblServerPort)
                    .addComponent(spServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblServerLogLevel)
                    .addComponent(cbServerLogLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblServerDebugPort)
                    .addComponent(spServerDebugPort, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 209, Short.MAX_VALUE)
                .addComponent(lblPlatypusServerRunCommand)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPlatypusServerRunCommand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void spServerPortFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_spServerPortFocusLost
        projectSettings.setPlatypusServerPort((Integer) spServerPort.getValue());
    }//GEN-LAST:event_spServerPortFocusLost

    private void spServerPortStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spServerPortStateChanged
        if (!isInit) {
            projectSettings.setPlatypusServerPort((Integer) spServerPort.getValue());
        }
    }//GEN-LAST:event_spServerPortStateChanged

    private void spServerDebugPortFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_spServerDebugPortFocusLost
        projectSettings.setPlatypusServerDebugPort((int) spServerDebugPort.getValue());
    }//GEN-LAST:event_spServerDebugPortFocusLost

    private void spServerDebugPortStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spServerDebugPortStateChanged
        projectSettings.setPlatypusServerDebugPort((int) spServerDebugPort.getValue());
    }//GEN-LAST:event_spServerDebugPortStateChanged

    private void cbServerLogLevelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbServerLogLevelItemStateChanged
        projectSettings.setPlatypusServerLogLevel((Level) cbServerLogLevel.getSelectedItem());
    }//GEN-LAST:event_cbServerLogLevelItemStateChanged

    private void cbServerLogLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbServerLogLevelActionPerformed
        projectSettings.setPlatypusServerLogLevel((Level) cbServerLogLevel.getSelectedItem());
    }//GEN-LAST:event_cbServerLogLevelActionPerformed

    private void txtPlatypusServerRunCommandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlatypusServerRunCommandActionPerformed
        projectSettings.setPlatypusServerRunCommand(txtPlatypusServerRunCommand.getText());
    }//GEN-LAST:event_txtPlatypusServerRunCommandActionPerformed

    private void txtPlatypusServerRunCommandFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPlatypusServerRunCommandFocusLost
        projectSettings.setPlatypusServerRunCommand(txtPlatypusServerRunCommand.getText());
    }//GEN-LAST:event_txtPlatypusServerRunCommandFocusLost

    private void cbRunPlatypusServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRunPlatypusServerActionPerformed
        projectSettings.setStartLocalPlatypusServer(cbRunPlatypusServer.isSelected());
    }//GEN-LAST:event_cbRunPlatypusServerActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbRunPlatypusServer;
    private javax.swing.JComboBox cbServerLogLevel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblPlatypusServerRunCommand;
    private javax.swing.JLabel lblServerDebugPort;
    private javax.swing.JLabel lblServerLogLevel;
    private javax.swing.JLabel lblServerPort;
    private javax.swing.JSpinner spServerDebugPort;
    private javax.swing.JSpinner spServerPort;
    private javax.swing.JTextField txtPlatypusServerRunCommand;
    // End of variables declaration//GEN-END:variables
}

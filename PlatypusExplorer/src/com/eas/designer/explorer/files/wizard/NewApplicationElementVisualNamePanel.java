/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.eas.designer.explorer.files.wizard;

import com.eas.designer.explorer.project.PlatypusProjectImpl;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.netbeans.api.project.Project;
import org.netbeans.spi.project.ui.templates.support.Templates;
import org.openide.WizardDescriptor;
import org.openide.filesystems.FileObject;
import org.openide.util.NbBundle;

public final class NewApplicationElementVisualNamePanel extends JPanel implements DocumentListener {

    protected NewApplicationElementWizardNamePanel panel;
    protected FileObject targetFolder;

    /** Creates new form NewApplicationElementVisualPanel1
     * @param aWizardStep */
    public NewApplicationElementVisualNamePanel(NewApplicationElementWizardNamePanel aWizardStep) {
        initComponents();
        panel = aWizardStep;
        // Register listener on the textFields to make the automatic updates
        txtApplicationElementName.getDocument().addDocumentListener(this);
    }

    public String getApplicationElementName() {
        return txtApplicationElementName.getText();
    }

    @Override
    public void addNotify() {
        super.addNotify();
        txtApplicationElementName.requestFocus();
    }

    public boolean valid(WizardDescriptor wd) {
        String applicationElementName = getApplicationElementName();
        if (applicationElementName == null || applicationElementName.isEmpty()) {
            wd.putProperty(WizardDescriptor.PROP_ERROR_MESSAGE, NbBundle.getMessage(NewApplicationElementVisualNamePanel.class, "NewApplicationElementVisualPanelElementName.missingApplicationElementName"));
            return false;
        }
        for(FileObject fo: targetFolder.getChildren())
        {
            if(applicationElementName.equalsIgnoreCase(fo.getName()))
            {
                wd.putProperty(WizardDescriptor.PROP_ERROR_MESSAGE, NbBundle.getMessage(NewApplicationElementVisualNamePanel.class, "NewApplicationElementVisualPanelElementName.existingApplicationElementName"));
                return false;
            }
        }
        wd.putProperty(WizardDescriptor.PROP_INFO_MESSAGE, NbBundle.getMessage(NewApplicationElementVisualNamePanel.class, "NewApplicationElementVisualPanelElementName.readyToCreateApplicationElement"));
        return true;
    }

    void store(WizardDescriptor wd) {
        Templates.setTargetName(wd, txtApplicationElementName.getText());
    }

    void read(WizardDescriptor wd) {
        String targetName = Templates.getTargetName(wd);
        if (targetName == null) {
            targetName = "";
        }
        txtApplicationElementName.setText(targetName);
        txtApplicationElementName.selectAll();
        Project project = Templates.getProject(wd);
        assert project instanceof PlatypusProjectImpl;
        targetFolder = Templates.getTargetFolder(wd);
        txtProject.setText(((PlatypusProjectImpl) project).getProjectInfo().getDisplayName());
        txtCreatedFile.setText(targetFolder.getPath() + "/" + targetName);
        SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {
                txtApplicationElementName.requestFocusInWindow();
            }
        });
    }

    // Implementation of DocumentListener --------------------------------------
    @Override
    public void changedUpdate(DocumentEvent e) {
        updateTexts(e);
    }

    @Override
    public void insertUpdate(DocumentEvent e) {
        updateTexts(e);
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        updateTexts(e);
    }

    private void updateTexts(DocumentEvent e) {
        if (panel != null) {
            String targetName = txtApplicationElementName.getText();
            if (targetName == null) {
                targetName = "";
            }
            txtCreatedFile.setText(targetFolder.getPath() + "/" + targetName);
            panel.fireChangeEvent(); // Notify that the panel changed
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblApplicationElementName = new javax.swing.JLabel();
        txtApplicationElementName = new javax.swing.JTextField();
        lblCreatedFile = new javax.swing.JLabel();
        txtCreatedFile = new javax.swing.JTextField();
        lblProject = new javax.swing.JLabel();
        txtProject = new javax.swing.JTextField();

        setFocusCycleRoot(true);

        org.openide.awt.Mnemonics.setLocalizedText(lblApplicationElementName, org.openide.util.NbBundle.getMessage(NewApplicationElementVisualNamePanel.class, "NewApplicationElementVisualNamePanel.lblApplicationElementName.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblCreatedFile, org.openide.util.NbBundle.getMessage(NewApplicationElementVisualNamePanel.class, "NewApplicationElementVisualNamePanel.lblCreatedFile.text")); // NOI18N

        txtCreatedFile.setEditable(false);

        org.openide.awt.Mnemonics.setLocalizedText(lblProject, org.openide.util.NbBundle.getMessage(NewApplicationElementVisualNamePanel.class, "NewApplicationElementVisualNamePanel.lblProject.text")); // NOI18N

        txtProject.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCreatedFile)
                    .addComponent(lblApplicationElementName)
                    .addComponent(lblProject))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtProject, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                    .addComponent(txtCreatedFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                    .addComponent(txtApplicationElementName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProject)
                    .addComponent(txtProject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCreatedFile)
                    .addComponent(txtCreatedFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblApplicationElementName)
                    .addComponent(txtApplicationElementName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(208, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblApplicationElementName;
    private javax.swing.JLabel lblCreatedFile;
    private javax.swing.JLabel lblProject;
    private javax.swing.JTextField txtApplicationElementName;
    private javax.swing.JTextField txtCreatedFile;
    private javax.swing.JTextField txtProject;
    // End of variables declaration//GEN-END:variables
}
